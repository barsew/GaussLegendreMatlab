function [] = test1()
% Projekt 2, zadanie 14
% Bartosz Seweryn, 320733
%
% Funckja testująca rząd kwadratury.

fprintf("Funkcja testuje rząd kwadratury w zależności od ilości punk" + ...
    "tów.\nKwadratura Gaussa-Legendra powinna mieć rząd równy 2n, gd" + ...
    "zie n\nto liczba punktów kwadratury.\n\n");

n = [3, 5, 7];

wielomiany = ["1", "x", "2x^2 - 1", "4x^3 - 3x", "8x^4 - 8x^2 + 1" + ...
    "", "16x^5 - 20x^3 + 5x", "32x^6 - 48x^4 + 18x^2 - 1", "64x^7" + ...
    " - 112x^5 + 56x^3 - 7x", "128x^8 - 256x^6 + 160x^4 - 32x^2 +" + ...
    " 1", "256x^9 - 576x^7 + 432x^5 - 120x^3 + 9x", "512x^10 - 12" + ...
    "80x^8 + 1120x^6 - 400x^4 + 50x^2 - 1", "1024x^11 - 2816x^9 +" + ...
    " 2816x^7 - 1232x^5 + 220x^3 - 11x", "2048x^12 - 6144x^10 + 6" + ...
    "912x^8 - 3584x^6 + 840x^4 - 72x^2 + 1", "4096x^13 - 13312x^1" + ...
    "1 + 13824x^9 - 4352x^7 + 2912x^5 - 364x^3 + 13x", "8192x^14 " + ...
    "- 28672x^12 + 33792x^10 - 15616x^8 + 9408x^6 - 1568x^4 + 98x" + ...
    "^2 - 1"];
rozwiazania__analityczne = {@(x) x, @(x) x.^2 ./ 2, @(x) 2 .* x.^3 ...
    ./ 3 - x, @(x) x.^4 - 3 .* x^2 ./ 2, @(x) 8 .* x.^5 ./ 5 - 8 ...
    .* x.^3 ./ 3 + x, @(x) 8 .* x.^6  ./ 3 - 5 .* x.^4 + 5 .* x.^2 ...
    ./ 2, @(x) 32 .* x.^7 ./ 7 - 48 .* x.^5 ./ 5 + 6 .* x.^3 - x, ...
    @(x) 8 .* x.^8 - 56 .* x.^6 ./ 3 + 14 .* x.^4 - 7 .* x.^2 ./ ...
    2, @(x) 128 .* x.^9 ./ 9 - 256 .* x.^7 ./ 7 + 32 .* x.^5 - 32 ...
    .* x.^3 ./ 3 + x, @(x) 128 .* x.^10 ./ 5 - 72 .* x.^8 + 72 .* ...
    x.^6 - 30 .* x.^4 + 9 .* x.^2 ./ 2, @(x) 512 .* x.^11 ./ 11 - ...
    1280 .* x.^9 ./ 9 + 160 .* x.^7 - 80 .* x.^5 + 50 .* x.^3 ./ ...
    3 - x, @(x) 256 .* x.^12 ./ 3 - 1408 .* x.^10 ./ 5 + 352 .* ...
    x.^8 - 616 .* x.^6 ./ 3 + 55 .* x.^4 - 11 .* x.^2 ./ 2, @(x) ...
    2048 .* x.^13 ./ 13 - 6144 .* x.^11 ./ 11 + 768 .* x.^9 - 512 ...
    .* x.^7 + 168 .* x.^5 - 24 .* x.^3 + x, @(x) 2048 .* x.^14 ./ ...
    7 - 3328 .* x.^12 ./ 3 + 6912 .* x.^10 ./ 5 - 544 .* x.^8 + ...
    1456 .* x.^6 ./ 3 - 91 .* x.^4 + 13 .* x.^2 ./ 2, @(x) 8192 ...
    .* x.^15 ./ 15 - 28672 .* x.^13 ./ 13 + 3072 .* x.^11 - 15616 ...
    .* x.^9 ./ 9 + 1344 .* x.^7 - 1568 .* x.^5 ./ 5 + 98 .* x.^3 ./ 3 - x};

for i = 1:length(n)
    fprintf("n = %d\n", n(i));
    for j = 1:(2 * n(i) + 1)
        A = zeros(1, j); 
        A(j) = 1; % wektor zer, który na j-tym miejscu ma 1
        wynik_dokladny = rozwiazania__analityczne{j}(1) ...
        - rozwiazania__analityczne{j}(-1);
        wynik_przyblizony = P2Z14_BSE_gauss_legendre(A, n(i));
        blad = abs(wynik_dokladny - wynik_przyblizony);

        fprintf("Wielomian: p(x) = %s\n", wielomiany(j));
        fprintf("Dokładna wartość całki: %d\n", wynik_dokladny);
        fprintf("Wynik zwrócony przez program: %d\n", wynik_przyblizony);
        fprintf("Błąd: %d\n\n", blad);
        pause;
    end
end

end % function

